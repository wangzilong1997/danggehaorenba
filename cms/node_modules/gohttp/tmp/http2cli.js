'use strict'

const {http2cli} = require('../index')

let hs = http2cli.connectPool('http://localhost:1234', {
            max : 3,
            debug: true,
            keepalive : true
          })

hs.get({
  path : '/'
}).then(ret => {
  console.log(ret.text())
})

hs.post({
  path : '/',
  body : {
    name : 'wang'
  }
})
.then(ret => {
  console.log(ret.text())
  
})

/* setTimeout(() => {
  hs.destroy()
}, 20) */

setTimeout(() => {
  hs.get({
    path : '/html'
  })
  .then(ret => {
    console.log(ret.error)
    console.log(ret.text())
  })

  hs.upload({
    path : '/upload',
    files : {
      image : [
        process.env.HOME + '/tmp/images/123.jpg',
        process.env.HOME + '/tmp/images/space2.jpg',
      ]
    }
  })
  .then(ret => {
    console.log(ret.error)
    console.log(ret.status, ret.text())
  })

}, 500)
/*
;(async () => {

  hs.destroy()

  await new Promise((rv,rj) => {
    setTimeout(() => {
      rv()
    }, 7)
  })

  let startTime = Date.now()

  for (let i = 0; i < 10000; i++) {

    await Promise.all([
      hs.get({
        path : '/'
      }).then(ret => {
        //console.log(ret.text())
        return ret.text()
      }),
      hs.post({
        path : '/',
        body : {
          name : 'wang'
        }
      })
      .then(ret => {
        //console.log(ret.text())
        return ret.text()
      })
    ]).then(rets => {
      console.log(rets)
    })
    
  }

  let endTime = Date.now()

  console.log(endTime - startTime)

})();
*/

setInterval(() => {
  hs.get({
    path : '/'
  }).then(ret => {
    console.log(ret.text())
  }).catch(err => {
    console.error(err.message)
  })
  
  hs.post({
    path : '/',
    body : {
      name : 'wang'
    }
  })
  .then(ret => {
    console.log(ret.text())
  }).catch(err => {
    console.error(err.message)
  })

}, 2250)
